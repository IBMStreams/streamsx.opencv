/*
Copyright (C) 2012, 2016, International Business Machines Corporation
All Rights Reserved
*/

/* Additional includes go here */
#include <opencv.h>

<%SPL::CodeGen::headerPrologue($model);%>

<%
# Set up commonly used variables, includes, and requires
my $modelroot = $model->getContext()->getOperatorDirectory();
unshift @INC, dirname($modelroot) . "/Common";

use strict;
require opencv;
require util;
import opencv;
import util;

%>

#define NUMBER_OF_FEATURES 400

class MY_OPERATOR : public MY_BASE_OPERATOR 
{
public:
  // Constructor
  MY_OPERATOR();

  // Destructor
  virtual ~MY_OPERATOR(); 

  // Notify port readiness
  void allPortsReady(); 

  // Notify pending shutdown
  void prepareToShutdown(); 

  // Tuple processing for mutating ports
  void process(Tuple & tuple, uint32_t port);

  // Punctuation processing
  void process(Punctuation const & punct, uint32_t port);
private:
  // Members
      uint64_t _frame_count ;
      CvMemStorage* _storage ;
      CvSeq* _point_seq ;
      IplImage* _previous_frame ;
      IplImage* _new_frame ;
      IplImage* _eig_image ;
      IplImage* _temp_image ;
      IplImage* _pyramid1 ;
      IplImage* _pyramid2 ;

      double _threshold ;

      <%= opencv_tb_declare($model, "pyramidlevel") %>
      <%= opencv_tb_declare($model, "termiteration") %>
      <%= opencv_tb_declare($model, "featurecount") %>
}; 

<%SPL::CodeGen::headerEpilogue($model);%>

