/*
Copyright (C) 2012, 2016, International Business Machines Corporation
All Rights Reserved
*/

namespace sample;

use com.ibm.streamsx.opencv::*;

composite demo4b {
  graph
    stream<IplImage> vid0 = CaptureFromFile() {
      param
        file : dataDirectory() + "/sample.mpg";
        repeat : 1;
      config
        placement : partitionColocation("P1");
    }

    stream<IplImage> smth = Smooth(vid0) {
      param
        iteration : 4;
      config
        placement : partitionColocation("P1");
    }

    stream<IplImage> cb = CodeBook(smth) {
      param
        time : 1;
      config
        placement : partitionColocation("P1");
    }

    stream<IplImage> cb_cc = ConnectedComponents(cb) {
      config
        placement : partitionColocation("P1");
    }

    stream<IplImage> cb_cc_color = CvtColor(cb_cc) {
      param
        channels : 3;
        cvt_param : "CV_GRAY2BGR"; /* Constants for color conversion (cv.h) (quoted) */
      config
        placement : partitionColocation("P1");
    }

    stream<IplImage> final = Apply2(vid0; cb_cc_color) {
      param
        transform : "cvAnd"; /* The CV "in place" function to apply, suitable functions are "cvOr", "cvAnd", "cvAbsDiff", etc. */
      config
        placement : partitionColocation("P1");
    }

    () as SinkOp1 = MJPEGStreamer(final) {
      param
        httpport : 9001;
      config
        placement : partitionColocation("P1");
    }
}
