/*
 * # Licensed Materials - Property of IBM
 * # Copyright IBM Corp. 2012
 * # US Government Users Restricted Rights - Use, duplication or
 * # disclosure restricted by GSA ADP Schedule Contract with
 * # IBM Corp.
 */

namespace sample;

use com.ibm.streamsx.opencv::*;

composite demo7b
{
  graph
    stream<IplImage> vid0 = CaptureFromFile() {
      param
        file : dataDirectory() + "/sample_motion6.mpg";
        repeat : 1;
      config
        placement : partitionColocation("P1");
    }

    stream<int32 trackbar_pyramidlevel> tb_pyramidlevel = TrackBar() {
      param
        display : getEnvironmentVariable("DISPLAY");
        name : "Pyramid Level";
        title : "TrackBar";
        value : 5;
        max : 8;
      config
        placement : partitionColocation("P1");
    }

    stream<int32 trackbar_termiteration> tb_termiteration = TrackBar() {
      param
        display : getEnvironmentVariable("DISPLAY");
        name : "Termination Iteration";
        title : "TrackBar";
        value : 20;
        max : 40;
      config
        placement : partitionColocation("P1");
    }

    stream<int32 trackbar_featurecount> tb_featurecount = TrackBar() {
      param
        display : getEnvironmentVariable("DISPLAY");
        name : "Feature to track";
        title : "TrackBar";
        value : 400;
        max : 800;
      config
        placement : partitionColocation("P1");
    }

    stream<IplImage> md0 = MotionDetection(vid0; tb_pyramidlevel; tb_termiteration; tb_featurecount) {
      config
        placement : partitionColocation("P1");
    }

    stream<IplImage> st0 = Stats(md0) {
      config
        placement : partitionColocation("P1");
    }

    () as SinkOp1 = MJPEGStreamer(st0) {
      param
        httpport : 9001;
      config
        placement : partitionColocation("P1");
    }
}
